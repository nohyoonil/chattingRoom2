# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: check pwd
      run: pwd
      
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      
    - run: ./gradlew init

    #- name: Build with Gradle Wrapper
    #  run: ./gradlew build
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3

    - name: pre build ls
      run: ls
      
    - name: Build with Gradle
      run: ./gradlew build

    - name: after build ls
      run: ls 

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: cicdsample
        path: ./build/libs/*.jar

  deploy:
    needs: build
    
    runs-on: ubuntu-latest
    env: 
      ssh_key: ${{ secrets.SSH_KEY }}
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: cicdsample

      - run: |
          echo $ssh_key >> ~/key.pem
          cat ~/key.pem
          chmod 777 ~/key.pem
      
      - name: check *.jar
        run: ls
        
      - name: scp jar to ec2 
        run: scp -i ~/key.pem *.jar ${{ secrets.USER }}@${{ secrets.HOST }}:~/cicd
          
      #- name: ssh to ec2
       # uses: appleboy/ssh-action@master
        #with:
          # key: ${{ secrets.SSH_KEY }}
          # host: ${{ secrets.HOST }}
          # username: ${{ secrets.USER }}
          # script: |
           #   scp *.jar ${{ secrets.USER }}@${{ secrets.HOST }}:~/cicd
           #   ssh ${{ secrets.USER }}@${{ secrets.HOST }} "sudo fuser -k 8080/tcp || true"
           #   ssh ${{ secrets.USER }}@${{ secrets.HOST }} "sudo nohup /usr/bin/java -jar ~/cicd/*.jar &"
              #sudo fuser -k 8080/tcp || true
              #sudo nohup /usr/bin/java -jar ~/cicd/*.jar &
              
      #- name: Setup SSH
       # uses: webfactory/ssh-agent@v0.5.4
        # with:
          ##ssh-private-key: ${{ secrets.SSH_KEY }}
         # ssh-private-key: ~/key.pem
          
     # - name: SCP transfer
      #  run: scp *.jar ${{ secrets.USER }}@${{ secrets.HOST }}:~/cicd
      #- name: Execute remote commands
       # run: |
        #  ssh ${{ secrets.USER }}@${{ secrets.HOST }} "sudo fuser -k 8080/tcp || true"
         # ssh ${{ secrets.USER }}@${{ secrets.HOST }} "sudo nohup /usr/bin/java -jar ~/cicd/*.jar &"
  
